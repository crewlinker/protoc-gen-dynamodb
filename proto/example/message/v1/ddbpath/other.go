// Code generated by protoc-gen-dynamodb. DO NOT EDIT.

// Package messagev1ddbpath holds generated code for working with Dynamo document paths
package messagev1ddbpath

import (
	expression "github.com/aws/aws-sdk-go-v2/feature/dynamodb/expression"
	ddbpath "github.com/crewlinker/protoc-gen-dynamodb/ddb/ddbpath"
	"reflect"
)

// OtherKitchenPath allows for constructing type-safe expression names
type OtherKitchenPath struct {
	expression.NameBuilder
}

// WithDynamoNameBuilder allows generic types to overwrite the path
func (p OtherKitchenPath) WithDynamoNameBuilder(n expression.NameBuilder) OtherKitchenPath {
	p.NameBuilder = n
	return p
}

// AnotherKitchen returns 'p' with the attribute name appended and allow subselecting nested message
func (p OtherKitchenPath) AnotherKitchen() KitchenPath {
	return KitchenPath{p.AppendName(expression.Name("16"))}
}

// OtherTimer appends the path being build
func (p OtherKitchenPath) OtherTimer() expression.NameBuilder {
	return p.AppendName(expression.Name("17"))
}
func init() {
	ddbpath.RegisterMessage(reflect.TypeOf(OtherKitchenPath{}), map[string]ddbpath.FieldInfo{
		"16": {
			Kind: ddbpath.BasicKind,
			Ref:  reflect.TypeOf(KitchenPath{}),
		},
		"17": {Kind: ddbpath.BasicKind},
	})
}
