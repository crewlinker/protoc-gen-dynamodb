// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: ddb/v1/options.proto

package ddbv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// encoding kinds
type Encoding int32

const (
	// unspecified encoding
	Encoding_ENCODING_UNSPECIFIED Encoding = 0
	// json encoding
	Encoding_ENCODING_JSON Encoding = 1
	// dynamo encoding
	Encoding_ENCODING_DYNAMO Encoding = 2
)

// Enum value maps for Encoding.
var (
	Encoding_name = map[int32]string{
		0: "ENCODING_UNSPECIFIED",
		1: "ENCODING_JSON",
		2: "ENCODING_DYNAMO",
	}
	Encoding_value = map[string]int32{
		"ENCODING_UNSPECIFIED": 0,
		"ENCODING_JSON":        1,
		"ENCODING_DYNAMO":      2,
	}
)

func (x Encoding) Enum() *Encoding {
	p := new(Encoding)
	*p = x
	return p
}

func (x Encoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Encoding) Descriptor() protoreflect.EnumDescriptor {
	return file_ddb_v1_options_proto_enumTypes[0].Descriptor()
}

func (Encoding) Type() protoreflect.EnumType {
	return &file_ddb_v1_options_proto_enumTypes[0]
}

func (x Encoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Encoding) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Encoding(num)
	return nil
}

// Deprecated: Use Encoding.Descriptor instead.
func (Encoding) EnumDescriptor() ([]byte, []int) {
	return file_ddb_v1_options_proto_rawDescGZIP(), []int{0}
}

// Options for the local secondary index (lsi)
type LsiOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the lsi the field is a part of
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// indicate that the field is the sort key of the lsi, else it's part of the projection
	Sk *bool `protobuf:"varint,3,opt,name=sk" json:"sk,omitempty"`
}

func (x *LsiOptions) Reset() {
	*x = LsiOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddb_v1_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LsiOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LsiOptions) ProtoMessage() {}

func (x *LsiOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddb_v1_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LsiOptions.ProtoReflect.Descriptor instead.
func (*LsiOptions) Descriptor() ([]byte, []int) {
	return file_ddb_v1_options_proto_rawDescGZIP(), []int{0}
}

func (x *LsiOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LsiOptions) GetSk() bool {
	if x != nil && x.Sk != nil {
		return *x.Sk
	}
	return false
}

// Options for the global secondary index (lsi)
type GsiOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the gsi the field is a part of
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// indicate that the field is the partition key of the gsi
	Pk *bool `protobuf:"varint,2,opt,name=pk" json:"pk,omitempty"`
	// indicate that the field is the sort key of the gsi
	Sk *bool `protobuf:"varint,3,opt,name=sk" json:"sk,omitempty"`
}

func (x *GsiOptions) Reset() {
	*x = GsiOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddb_v1_options_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GsiOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GsiOptions) ProtoMessage() {}

func (x *GsiOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddb_v1_options_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GsiOptions.ProtoReflect.Descriptor instead.
func (*GsiOptions) Descriptor() ([]byte, []int) {
	return file_ddb_v1_options_proto_rawDescGZIP(), []int{1}
}

func (x *GsiOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GsiOptions) GetPk() bool {
	if x != nil && x.Pk != nil {
		return *x.Pk
	}
	return false
}

func (x *GsiOptions) GetSk() bool {
	if x != nil && x.Sk != nil {
		return *x.Sk
	}
	return false
}

// New options for providing gsi options on the table
type GsiOptionsV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the gsi
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// primary key attribute for the gsi
	Pk *string `protobuf:"bytes,2,req,name=pk" json:"pk,omitempty"`
	// optional sort key for the gsi
	Sk *string `protobuf:"bytes,3,opt,name=sk" json:"sk,omitempty"`
}

func (x *GsiOptionsV2) Reset() {
	*x = GsiOptionsV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddb_v1_options_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GsiOptionsV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GsiOptionsV2) ProtoMessage() {}

func (x *GsiOptionsV2) ProtoReflect() protoreflect.Message {
	mi := &file_ddb_v1_options_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GsiOptionsV2.ProtoReflect.Descriptor instead.
func (*GsiOptionsV2) Descriptor() ([]byte, []int) {
	return file_ddb_v1_options_proto_rawDescGZIP(), []int{2}
}

func (x *GsiOptionsV2) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GsiOptionsV2) GetPk() string {
	if x != nil && x.Pk != nil {
		return *x.Pk
	}
	return ""
}

func (x *GsiOptionsV2) GetSk() string {
	if x != nil && x.Sk != nil {
		return *x.Sk
	}
	return ""
}

// New options for providing lsi options on the table
type LsiOptionsV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the gsi
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// optional sort key for the gsi
	Sk *string `protobuf:"bytes,3,req,name=sk" json:"sk,omitempty"`
}

func (x *LsiOptionsV2) Reset() {
	*x = LsiOptionsV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddb_v1_options_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LsiOptionsV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LsiOptionsV2) ProtoMessage() {}

func (x *LsiOptionsV2) ProtoReflect() protoreflect.Message {
	mi := &file_ddb_v1_options_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LsiOptionsV2.ProtoReflect.Descriptor instead.
func (*LsiOptionsV2) Descriptor() ([]byte, []int) {
	return file_ddb_v1_options_proto_rawDescGZIP(), []int{3}
}

func (x *LsiOptionsV2) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LsiOptionsV2) GetSk() string {
	if x != nil && x.Sk != nil {
		return *x.Sk
	}
	return ""
}

// FieldOptions presents options to configure fields for DynamoDB
type FieldOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// specify the name of the DynamoDB attribute
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// indicate that the field represents the item's partition key in the table it is stored
	Pk *bool `protobuf:"varint,2,opt,name=pk" json:"pk,omitempty"`
	// indicate that the field represents the item's sort key in the table it is stored
	Sk *bool `protobuf:"varint,3,opt,name=sk" json:"sk,omitempty"`
	// indicate that the field should be ignored by Dynamo code generation
	Omit *bool `protobuf:"varint,4,opt,name=omit" json:"omit,omitempty"`
	// indicate that the field should be marshalled and unmarshalled from dynamo as a set
	Set *bool `protobuf:"varint,5,opt,name=set" json:"set,omitempty"`
	// allows for embedding the field's value as an encoded json or binary protobuf
	Embed *Encoding `protobuf:"varint,6,opt,name=embed,enum=ddb.v1.Encoding" json:"embed,omitempty"`
	// configure the field as part of an lsi on the table it
	Lsi []*LsiOptions `protobuf:"bytes,8,rep,name=lsi" json:"lsi,omitempty"`
	// configure the field as part of the gsi of a table
	Gsi []*GsiOptions `protobuf:"bytes,9,rep,name=gsi" json:"gsi,omitempty"`
}

func (x *FieldOptions) Reset() {
	*x = FieldOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddb_v1_options_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptions) ProtoMessage() {}

func (x *FieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddb_v1_options_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptions.ProtoReflect.Descriptor instead.
func (*FieldOptions) Descriptor() ([]byte, []int) {
	return file_ddb_v1_options_proto_rawDescGZIP(), []int{4}
}

func (x *FieldOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FieldOptions) GetPk() bool {
	if x != nil && x.Pk != nil {
		return *x.Pk
	}
	return false
}

func (x *FieldOptions) GetSk() bool {
	if x != nil && x.Sk != nil {
		return *x.Sk
	}
	return false
}

func (x *FieldOptions) GetOmit() bool {
	if x != nil && x.Omit != nil {
		return *x.Omit
	}
	return false
}

func (x *FieldOptions) GetSet() bool {
	if x != nil && x.Set != nil {
		return *x.Set
	}
	return false
}

func (x *FieldOptions) GetEmbed() Encoding {
	if x != nil && x.Embed != nil {
		return *x.Embed
	}
	return Encoding_ENCODING_UNSPECIFIED
}

func (x *FieldOptions) GetLsi() []*LsiOptions {
	if x != nil {
		return x.Lsi
	}
	return nil
}

func (x *FieldOptions) GetGsi() []*GsiOptions {
	if x != nil {
		return x.Gsi
	}
	return nil
}

// MessageOptions presents options to configure messages for DynamoDB
type MessageOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// table name in which the message will be stored
	Table []string `protobuf:"bytes,1,rep,name=table" json:"table,omitempty"`
	// gsi allows global secondary indexes to be configured
	Gsi []*GsiOptionsV2 `protobuf:"bytes,2,rep,name=gsi" json:"gsi,omitempty"`
	// lsi allows local secondary indexes to be configured for the table
	Lsi []*LsiOptionsV2 `protobuf:"bytes,3,rep,name=lsi" json:"lsi,omitempty"`
}

func (x *MessageOptions) Reset() {
	*x = MessageOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddb_v1_options_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOptions) ProtoMessage() {}

func (x *MessageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddb_v1_options_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOptions.ProtoReflect.Descriptor instead.
func (*MessageOptions) Descriptor() ([]byte, []int) {
	return file_ddb_v1_options_proto_rawDescGZIP(), []int{5}
}

func (x *MessageOptions) GetTable() []string {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *MessageOptions) GetGsi() []*GsiOptionsV2 {
	if x != nil {
		return x.Gsi
	}
	return nil
}

func (x *MessageOptions) GetLsi() []*LsiOptionsV2 {
	if x != nil {
		return x.Lsi
	}
	return nil
}

// Configure a global secondary index
type TableGsiOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the gsi
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// partition key for the gsi
	Pk *uint32 `protobuf:"varint,2,req,name=pk" json:"pk,omitempty"`
	// sort key for the gsi
	Sk *uint32 `protobuf:"varint,3,opt,name=sk" json:"sk,omitempty"`
}

func (x *TableGsiOptions) Reset() {
	*x = TableGsiOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddb_v1_options_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableGsiOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableGsiOptions) ProtoMessage() {}

func (x *TableGsiOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddb_v1_options_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableGsiOptions.ProtoReflect.Descriptor instead.
func (*TableGsiOptions) Descriptor() ([]byte, []int) {
	return file_ddb_v1_options_proto_rawDescGZIP(), []int{6}
}

func (x *TableGsiOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TableGsiOptions) GetPk() uint32 {
	if x != nil && x.Pk != nil {
		return *x.Pk
	}
	return 0
}

func (x *TableGsiOptions) GetSk() uint32 {
	if x != nil && x.Sk != nil {
		return *x.Sk
	}
	return 0
}

// TableOptions provide options for messages that describe tables
type TableOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the table
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// field number of the partition key
	Pk *uint32 `protobuf:"varint,2,req,name=pk" json:"pk,omitempty"`
	// field number of the sort key
	Sk *uint32 `protobuf:"varint,3,opt,name=sk" json:"sk,omitempty"`
	// any global secondary indices
	Gsi []*TableGsiOptions `protobuf:"bytes,10,rep,name=gsi" json:"gsi,omitempty"`
}

func (x *TableOptions) Reset() {
	*x = TableOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddb_v1_options_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableOptions) ProtoMessage() {}

func (x *TableOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddb_v1_options_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableOptions.ProtoReflect.Descriptor instead.
func (*TableOptions) Descriptor() ([]byte, []int) {
	return file_ddb_v1_options_proto_rawDescGZIP(), []int{7}
}

func (x *TableOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TableOptions) GetPk() uint32 {
	if x != nil && x.Pk != nil {
		return *x.Pk
	}
	return 0
}

func (x *TableOptions) GetSk() uint32 {
	if x != nil && x.Sk != nil {
		return *x.Sk
	}
	return 0
}

func (x *TableOptions) GetGsi() []*TableGsiOptions {
	if x != nil {
		return x.Gsi
	}
	return nil
}

// AttributeOptions provide options for fields that describe attributes
type AttributeOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AttributeOptions) Reset() {
	*x = AttributeOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddb_v1_options_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeOptions) ProtoMessage() {}

func (x *AttributeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddb_v1_options_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeOptions.ProtoReflect.Descriptor instead.
func (*AttributeOptions) Descriptor() ([]byte, []int) {
	return file_ddb_v1_options_proto_rawDescGZIP(), []int{8}
}

// EntityOptions are options for entity
type EntityOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// entity type attribute
	TypeAttr *uint32 `protobuf:"varint,4,opt,name=type_attr,json=typeAttr" json:"type_attr,omitempty"`
}

func (x *EntityOptions) Reset() {
	*x = EntityOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddb_v1_options_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityOptions) ProtoMessage() {}

func (x *EntityOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddb_v1_options_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityOptions.ProtoReflect.Descriptor instead.
func (*EntityOptions) Descriptor() ([]byte, []int) {
	return file_ddb_v1_options_proto_rawDescGZIP(), []int{9}
}

func (x *EntityOptions) GetTypeAttr() uint32 {
	if x != nil && x.TypeAttr != nil {
		return *x.TypeAttr
	}
	return 0
}

// Options for configuring a access pattern
type QueryOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the table the query is run on
	Table *string `protobuf:"bytes,1,req,name=table" json:"table,omitempty"`
	// name of the index the query is run on
	Index *string `protobuf:"bytes,2,opt,name=index" json:"index,omitempty"`
}

func (x *QueryOptions) Reset() {
	*x = QueryOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddb_v1_options_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOptions) ProtoMessage() {}

func (x *QueryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddb_v1_options_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOptions.ProtoReflect.Descriptor instead.
func (*QueryOptions) Descriptor() ([]byte, []int) {
	return file_ddb_v1_options_proto_rawDescGZIP(), []int{10}
}

func (x *QueryOptions) GetTable() string {
	if x != nil && x.Table != nil {
		return *x.Table
	}
	return ""
}

func (x *QueryOptions) GetIndex() string {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return ""
}

var file_ddb_v1_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageOptions)(nil),
		Field:         1099,
		Name:          "ddb.v1.msg",
		Tag:           "bytes,1099,opt,name=msg",
		Filename:      "ddb/v1/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*TableOptions)(nil),
		Field:         1098,
		Name:          "ddb.v1.table",
		Tag:           "bytes,1098,opt,name=table",
		Filename:      "ddb/v1/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldOptions)(nil),
		Field:         1099,
		Name:          "ddb.v1.field",
		Tag:           "bytes,1099,opt,name=field",
		Filename:      "ddb/v1/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*AttributeOptions)(nil),
		Field:         1098,
		Name:          "ddb.v1.attr",
		Tag:           "bytes,1098,opt,name=attr",
		Filename:      "ddb/v1/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.OneofOptions)(nil),
		ExtensionType: (*EntityOptions)(nil),
		Field:         1098,
		Name:          "ddb.v1.entity",
		Tag:           "bytes,1098,opt,name=entity",
		Filename:      "ddb/v1/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*QueryOptions)(nil),
		Field:         1098,
		Name:          "ddb.v1.query",
		Tag:           "bytes,1098,opt,name=query",
		Filename:      "ddb/v1/options.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional ddb.v1.MessageOptions msg = 1099;
	E_Msg = &file_ddb_v1_options_proto_extTypes[0]
	// optional ddb.v1.TableOptions table = 1098;
	E_Table = &file_ddb_v1_options_proto_extTypes[1]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional ddb.v1.FieldOptions field = 1099;
	E_Field = &file_ddb_v1_options_proto_extTypes[2]
	// optional ddb.v1.AttributeOptions attr = 1098;
	E_Attr = &file_ddb_v1_options_proto_extTypes[3]
)

// Extension fields to descriptorpb.OneofOptions.
var (
	// optional ddb.v1.EntityOptions entity = 1098;
	E_Entity = &file_ddb_v1_options_proto_extTypes[4]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional ddb.v1.QueryOptions query = 1098;
	E_Query = &file_ddb_v1_options_proto_extTypes[5]
)

var File_ddb_v1_options_proto protoreflect.FileDescriptor

var file_ddb_v1_options_proto_rawDesc = []byte{
	0x0a, 0x14, 0x64, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x30, 0x0a, 0x0a, 0x4c, 0x73, 0x69, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x73, 0x6b, 0x22, 0x40, 0x0a, 0x0a, 0x47, 0x73, 0x69, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x70, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x73, 0x6b, 0x22, 0x42, 0x0a, 0x0c, 0x47, 0x73, 0x69, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x56, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6b, 0x22, 0x32, 0x0a, 0x0c, 0x4c, 0x73, 0x69, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x73, 0x6b, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6b, 0x22, 0xdc, 0x01, 0x0a,
	0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x70,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x73,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6f, 0x6d, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x12,
	0x24, 0x0a, 0x03, 0x6c, 0x73, 0x69, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x73, 0x69, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x03, 0x6c, 0x73, 0x69, 0x12, 0x24, 0x0a, 0x03, 0x67, 0x73, 0x69, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x73, 0x69, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x03, 0x67, 0x73, 0x69, 0x22, 0x76, 0x0a, 0x0e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x67, 0x73, 0x69, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x64, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x73, 0x69, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x52, 0x03, 0x67, 0x73, 0x69, 0x12, 0x26, 0x0a, 0x03, 0x6c,
	0x73, 0x69, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x73, 0x69, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x52, 0x03,
	0x6c, 0x73, 0x69, 0x22, 0x45, 0x0a, 0x0f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x73, 0x69, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x70, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x73, 0x6b, 0x22, 0x6d, 0x0a, 0x0c, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x70, 0x6b, 0x12, 0x0e,
	0x0a, 0x02, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x73, 0x6b, 0x12, 0x29,
	0x0a, 0x03, 0x67, 0x73, 0x69, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x73, 0x69, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x03, 0x67, 0x73, 0x69, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2c, 0x0a,
	0x0d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x41, 0x74, 0x74, 0x72, 0x22, 0x3a, 0x0a, 0x0c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2a, 0x4c, 0x0a, 0x08, 0x45, 0x6e, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x4e, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x45, 0x4e, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x59, 0x4e,
	0x41, 0x4d, 0x4f, 0x10, 0x02, 0x3a, 0x4a, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xcb, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x3a, 0x4c, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xca, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x3a,
	0x4a, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xcb, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x64, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3a, 0x4c, 0x0a, 0x04, 0x61,
	0x74, 0x74, 0x72, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xca, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x64, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x3a, 0x4d, 0x0a, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xca, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x64, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x3a, 0x4b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xca, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x91, 0x01, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x72, 0x65, 0x77, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x64, 0x62,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x44, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x44, 0x64, 0x62, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x06, 0x44, 0x64, 0x62, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x12, 0x44, 0x64, 0x62,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x07, 0x44, 0x64, 0x62, 0x3a, 0x3a, 0x56, 0x31,
}

var (
	file_ddb_v1_options_proto_rawDescOnce sync.Once
	file_ddb_v1_options_proto_rawDescData = file_ddb_v1_options_proto_rawDesc
)

func file_ddb_v1_options_proto_rawDescGZIP() []byte {
	file_ddb_v1_options_proto_rawDescOnce.Do(func() {
		file_ddb_v1_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_ddb_v1_options_proto_rawDescData)
	})
	return file_ddb_v1_options_proto_rawDescData
}

var file_ddb_v1_options_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ddb_v1_options_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_ddb_v1_options_proto_goTypes = []interface{}{
	(Encoding)(0),                       // 0: ddb.v1.Encoding
	(*LsiOptions)(nil),                  // 1: ddb.v1.LsiOptions
	(*GsiOptions)(nil),                  // 2: ddb.v1.GsiOptions
	(*GsiOptionsV2)(nil),                // 3: ddb.v1.GsiOptionsV2
	(*LsiOptionsV2)(nil),                // 4: ddb.v1.LsiOptionsV2
	(*FieldOptions)(nil),                // 5: ddb.v1.FieldOptions
	(*MessageOptions)(nil),              // 6: ddb.v1.MessageOptions
	(*TableGsiOptions)(nil),             // 7: ddb.v1.TableGsiOptions
	(*TableOptions)(nil),                // 8: ddb.v1.TableOptions
	(*AttributeOptions)(nil),            // 9: ddb.v1.AttributeOptions
	(*EntityOptions)(nil),               // 10: ddb.v1.EntityOptions
	(*QueryOptions)(nil),                // 11: ddb.v1.QueryOptions
	(*descriptorpb.MessageOptions)(nil), // 12: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 13: google.protobuf.FieldOptions
	(*descriptorpb.OneofOptions)(nil),   // 14: google.protobuf.OneofOptions
	(*descriptorpb.MethodOptions)(nil),  // 15: google.protobuf.MethodOptions
}
var file_ddb_v1_options_proto_depIdxs = []int32{
	0,  // 0: ddb.v1.FieldOptions.embed:type_name -> ddb.v1.Encoding
	1,  // 1: ddb.v1.FieldOptions.lsi:type_name -> ddb.v1.LsiOptions
	2,  // 2: ddb.v1.FieldOptions.gsi:type_name -> ddb.v1.GsiOptions
	3,  // 3: ddb.v1.MessageOptions.gsi:type_name -> ddb.v1.GsiOptionsV2
	4,  // 4: ddb.v1.MessageOptions.lsi:type_name -> ddb.v1.LsiOptionsV2
	7,  // 5: ddb.v1.TableOptions.gsi:type_name -> ddb.v1.TableGsiOptions
	12, // 6: ddb.v1.msg:extendee -> google.protobuf.MessageOptions
	12, // 7: ddb.v1.table:extendee -> google.protobuf.MessageOptions
	13, // 8: ddb.v1.field:extendee -> google.protobuf.FieldOptions
	13, // 9: ddb.v1.attr:extendee -> google.protobuf.FieldOptions
	14, // 10: ddb.v1.entity:extendee -> google.protobuf.OneofOptions
	15, // 11: ddb.v1.query:extendee -> google.protobuf.MethodOptions
	6,  // 12: ddb.v1.msg:type_name -> ddb.v1.MessageOptions
	8,  // 13: ddb.v1.table:type_name -> ddb.v1.TableOptions
	5,  // 14: ddb.v1.field:type_name -> ddb.v1.FieldOptions
	9,  // 15: ddb.v1.attr:type_name -> ddb.v1.AttributeOptions
	10, // 16: ddb.v1.entity:type_name -> ddb.v1.EntityOptions
	11, // 17: ddb.v1.query:type_name -> ddb.v1.QueryOptions
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	12, // [12:18] is the sub-list for extension type_name
	6,  // [6:12] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_ddb_v1_options_proto_init() }
func file_ddb_v1_options_proto_init() {
	if File_ddb_v1_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ddb_v1_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LsiOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddb_v1_options_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GsiOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddb_v1_options_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GsiOptionsV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddb_v1_options_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LsiOptionsV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddb_v1_options_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddb_v1_options_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddb_v1_options_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableGsiOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddb_v1_options_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddb_v1_options_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddb_v1_options_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddb_v1_options_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ddb_v1_options_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 6,
			NumServices:   0,
		},
		GoTypes:           file_ddb_v1_options_proto_goTypes,
		DependencyIndexes: file_ddb_v1_options_proto_depIdxs,
		EnumInfos:         file_ddb_v1_options_proto_enumTypes,
		MessageInfos:      file_ddb_v1_options_proto_msgTypes,
		ExtensionInfos:    file_ddb_v1_options_proto_extTypes,
	}.Build()
	File_ddb_v1_options_proto = out.File
	file_ddb_v1_options_proto_rawDesc = nil
	file_ddb_v1_options_proto_goTypes = nil
	file_ddb_v1_options_proto_depIdxs = nil
}
