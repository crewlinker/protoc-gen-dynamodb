// Code generated by protoc-gen-dynamodb. DO NOT EDIT.

package ddbv1

import (
	"fmt"
	attributevalue "github.com/aws/aws-sdk-go-v2/feature/dynamodb/attributevalue"
	types "github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
	ddb "github.com/crewlinker/protoc-gen-dynamodb/ddb"
)

// MarshalDynamoItem marshals dat into a dynamodb attribute map
func (x *FieldOptions) MarshalDynamoItem(o ...ddb.EncodingOption) (m map[string]types.AttributeValue, err error) {
	m = make(map[string]types.AttributeValue)
	eo := ddb.ApplyEncodingOptions(o...)
	if x.Name != nil && eo.IsMasked("1") {
		m["1"], err = attributevalue.Marshal(x.GetName())
		if err != nil {
			return nil, fmt.Errorf("failed to marshal field 'Name': %w", err)
		}
	}
	if x.Pk != nil && eo.IsMasked("2") {
		m["2"], err = attributevalue.Marshal(x.GetPk())
		if err != nil {
			return nil, fmt.Errorf("failed to marshal field 'Pk': %w", err)
		}
	}
	if x.Sk != nil && eo.IsMasked("3") {
		m["3"], err = attributevalue.Marshal(x.GetSk())
		if err != nil {
			return nil, fmt.Errorf("failed to marshal field 'Sk': %w", err)
		}
	}
	return m, nil
}

// UnmarshalDynamoItem unmarshals data from a dynamodb attribute map
func (x *FieldOptions) UnmarshalDynamoItem(m map[string]types.AttributeValue, o ...ddb.DecodingOption) (err error) {
	err = attributevalue.Unmarshal(m["1"], &x.Name)
	if err != nil {
		return fmt.Errorf("failed to unmarshal field 'Name': %w", err)
	}
	err = attributevalue.Unmarshal(m["2"], &x.Pk)
	if err != nil {
		return fmt.Errorf("failed to unmarshal field 'Pk': %w", err)
	}
	err = attributevalue.Unmarshal(m["3"], &x.Sk)
	if err != nil {
		return fmt.Errorf("failed to unmarshal field 'Sk': %w", err)
	}
	return nil
}
