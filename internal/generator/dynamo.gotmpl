package {{.GoPackageName}}

import (
    "fmt"
    "github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
    "github.com/aws/aws-sdk-go-v2/feature/dynamodb/attributevalue"
)

{{ range $itname, $item := .Items }}
// MarshalDynamoItem encodes all fields of {{$item.GoIdent.GoName}} as a DynamoDB attribute map.
func (x *{{$item.GoIdent.GoName}}) MarshalDynamoItem(opts ...func(*attributevalue.EncoderOptions)) (m map[string]types.AttributeValue, err error) {
    m = make(map[string]types.AttributeValue, {{len $item.Fields}})
    {{- range $fidx, $field := $item.Fields }}
    {{ if $field.Message }}
    m{{$field.GoName}}, err := x.{{$field.GoName}}.MarshalDynamoItem(opts...)
    if err != nil {
        return nil, fmt.Errorf("failed to encode message field '{{$field.GoName}}': %w",err)
    }
    m["{{$field.DynamoName}}"] = &types.AttributeValueMemberM{Value: m{{$field.GoName}}}
    {{else}}
    m["{{$field.DynamoName}}"],err = attributevalue.NewEncoder(opts...).Encode(x.{{$field.GoName}})
    if err != nil {
        return nil, fmt.Errorf("failed to encode field '{{$field.GoName}}': %w",err)
    }
    {{ end }}

    {{ end }}
    return
}

// UnmarshalDynamoItem decodes all DynamoDB attributes into {{$item.GoIdent.GoName}}
func (x *{{$item.GoIdent.GoName}}) UnmarshalDynamoItem(m map[string]types.AttributeValue, opts ...func(*attributevalue.DecoderOptions)) (err error) {
    {{- range $fidx, $field := $item.Fields }}
    {{ if $field.Message }}        
        m{{$field.GoName}}, ok := m["{{$field.DynamoName}}"].(*types.AttributeValueMemberM)
        if !ok {
            return fmt.Errorf("no attribute for '{{$field.DynamoName}}', or not of 'M' type")
        }
        x.{{$field.GoName}} = new({{$field.Message.GoIdent.GoName}})
        x.{{$field.GoName}}.UnmarshalDynamoItem(m{{$field.GoName}}.Value, opts...)
    {{ else }}
        if err = attributevalue.NewDecoder(opts...).Decode(m["{{$field.DynamoName}}"], &x.{{$field.GoName}}); err != nil {
            return fmt.Errorf("failed to decode into field '{{$field.GoName}}': %w", err)
        }
    {{ end }}
    {{ end }}
    return nil
}
{{ end }}